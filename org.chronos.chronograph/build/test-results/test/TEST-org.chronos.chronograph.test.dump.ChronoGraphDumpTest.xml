<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" tests="15" skipped="0" failures="0" errors="0" timestamp="2017-08-28T17:55:45" hostname="Aurora" time="30.556">
  <properties/>
  <testcase name="canCreateGraphDump[Using tupl]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.492"/>
  <testcase name="canCreadDumpWithoutCaching[Using tupl]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="3.077"/>
  <testcase name="canReadDumpWithCaching[Using tupl]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="2.969"/>
  <testcase name="canCreateGraphDump[Using chunked]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.642"/>
  <testcase name="canCreadDumpWithoutCaching[Using chunked]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="1.162"/>
  <testcase name="canReadDumpWithCaching[Using chunked]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.891"/>
  <testcase name="canCreateGraphDump[Using inmemory]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.016"/>
  <testcase name="canCreadDumpWithoutCaching[Using inmemory]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.517"/>
  <testcase name="canReadDumpWithCaching[Using inmemory]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.43"/>
  <testcase name="canCreateGraphDump[Using jdbc]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.062"/>
  <testcase name="canCreadDumpWithoutCaching[Using jdbc]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="1.97"/>
  <testcase name="canReadDumpWithCaching[Using jdbc]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.97"/>
  <testcase name="canCreateGraphDump[Using mapdb]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="0.731"/>
  <testcase name="canCreadDumpWithoutCaching[Using mapdb]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="9.259"/>
  <testcase name="canReadDumpWithCaching[Using mapdb]" classname="org.chronos.chronograph.test.dump.ChronoGraphDumpTest" time="7.368"/>
  <system-out><![CDATA[[INFO ] 2017-08-28 19:55:45 [    Test worker] [    o.c.c.test.ChronosUnitTest]:  Temp directory is provided at: C:\Users\Martin\AppData\Local\Temp\ChronoDBTest318862688473434810


================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using tupl]
    Start time:  2017/08/28 19:55:45
================================================================================



<chronodump>
  <dbmetadata>
    <creationDate>2017-08-28 17:55:45.586 UTC</creationDate>
    <chronosVersion>0.7.3-RELEASE</chronosVersion>
    <commitMetadata>
      <org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
        <timestamp>1503942945426</timestamp>
        <branch>master</branch>
      </org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
    </commitMetadata>
    <branchMetadata>
      <branch>
        <name>master</name>
        <branchingTimestamp>0</branchingTimestamp>
      </branch>
    </branchMetadata>
    <indexerMetadata/>
  </dbmetadata>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>134072d5-05d0-4fe8-a887-11f9176b96c0</key>
    <value class="cEdge">
      <recordId>134072d5-05d0-4fe8-a887-11f9176b96c0</recordId>
      <label>family</label>
      <inVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</inVertexId>
      <outVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>3643f6c0-acd4-41c7-b6e1-5f43658b7626</key>
    <value class="cEdge">
      <recordId>3643f6c0-acd4-41c7-b6e1-5f43658b7626</recordId>
      <label>family</label>
      <inVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</inVertexId>
      <outVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>5786335f-683b-49be-918c-c8d87bf9565c</key>
    <value class="cEdge">
      <recordId>5786335f-683b-49be-918c-c8d87bf9565c</recordId>
      <label>family</label>
      <inVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</inVertexId>
      <outVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>bb8f2d9e-2be8-4c29-a212-27eb55f58402</key>
    <value class="cEdge">
      <recordId>bb8f2d9e-2be8-4c29-a212-27eb55f58402</recordId>
      <label>family</label>
      <inVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</inVertexId>
      <outVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">sister-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>df1f6a15-780c-471b-92dc-922d23ad976d</key>
    <value class="cEdge">
      <recordId>df1f6a15-780c-471b-92dc-922d23ad976d</recordId>
      <label>family</label>
      <inVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</inVertexId>
      <outVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>eb7456be-0a91-49d2-bcdb-e8eb85d8fcfd</key>
    <value class="cEdge">
      <recordId>eb7456be-0a91-49d2-bcdb-e8eb85d8fcfd</recordId>
      <label>family</label>
      <inVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</inVertexId>
      <outVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brohter</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>60c201df-3955-44bc-b1c6-6c3e4d72b142</key>
    <value class="cVertex">
      <recordId>60c201df-3955-44bc-b1c6-6c3e4d72b142</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</otherEndVertexId>
              <edgeId>3643f6c0-acd4-41c7-b6e1-5f43658b7626</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</otherEndVertexId>
              <edgeId>df1f6a15-780c-471b-92dc-922d23ad976d</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</otherEndVertexId>
              <edgeId>bb8f2d9e-2be8-4c29-a212-27eb55f58402</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</otherEndVertexId>
              <edgeId>eb7456be-0a91-49d2-bcdb-e8eb85d8fcfd</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>0fcb1609-7cd0-4da5-9974-9af675f78b2f</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jack</value>
          <recordId>26fe8bd3-069b-415f-8242-ba789b72f815</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</key>
    <value class="cVertex">
      <recordId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</otherEndVertexId>
              <edgeId>bb8f2d9e-2be8-4c29-a212-27eb55f58402</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</otherEndVertexId>
              <edgeId>5786335f-683b-49be-918c-c8d87bf9565c</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>bf2844d6-9236-40da-b730-852d1e17e79a</otherEndVertexId>
              <edgeId>134072d5-05d0-4fe8-a887-11f9176b96c0</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</otherEndVertexId>
              <edgeId>df1f6a15-780c-471b-92dc-922d23ad976d</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jane</value>
          <recordId>1123ccf6-b4f8-4e8f-acd4-8c0a8cd4c1f8</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>642a8bdc-e521-4f4b-9c6b-59ef2fca63bb</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942945426</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>bf2844d6-9236-40da-b730-852d1e17e79a</key>
    <value class="cVertex">
      <recordId>bf2844d6-9236-40da-b730-852d1e17e79a</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</otherEndVertexId>
              <edgeId>eb7456be-0a91-49d2-bcdb-e8eb85d8fcfd</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</otherEndVertexId>
              <edgeId>134072d5-05d0-4fe8-a887-11f9176b96c0</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>834caa2f-b8aa-41df-8ac2-a9cf28f8c2bb</otherEndVertexId>
              <edgeId>5786335f-683b-49be-918c-c8d87bf9565c</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>60c201df-3955-44bc-b1c6-6c3e4d72b142</otherEndVertexId>
              <edgeId>3643f6c0-acd4-41c7-b6e1-5f43658b7626</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">John</value>
          <recordId>63010754-98f3-443a-9469-5cebfd9de321</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>119013fb-bcfb-49a1-a9ba-5d750c39c985</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
</chronodump>


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using tupl]
    End time:    2017/08/28 19:55:45 (Duration: 492ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using tupl]
    Start time:  2017/08/28 19:55:45
================================================================================



[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:47 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:48 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using tupl]
    End time:    2017/08/28 19:55:48 (Duration: 3077ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using tupl]
    Start time:  2017/08/28 19:55:48
================================================================================



[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:51 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using tupl]
    End time:    2017/08/28 19:55:51 (Duration: 2969ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using chunked]
    Start time:  2017/08/28 19:55:51
================================================================================



<chronodump>
  <dbmetadata>
    <creationDate>2017-08-28 17:55:52.137 UTC</creationDate>
    <chronosVersion>0.7.3-RELEASE</chronosVersion>
    <commitMetadata>
      <org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
        <timestamp>1503942952074</timestamp>
        <branch>master</branch>
      </org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
    </commitMetadata>
    <branchMetadata>
      <branch>
        <name>master</name>
        <branchingTimestamp>0</branchingTimestamp>
      </branch>
    </branchMetadata>
    <indexerMetadata/>
  </dbmetadata>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>10a0c64d-e897-46f6-9563-3fb757085c42</key>
    <value class="cEdge">
      <recordId>10a0c64d-e897-46f6-9563-3fb757085c42</recordId>
      <label>family</label>
      <inVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</inVertexId>
      <outVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>879e50e5-3bef-4c6b-8210-32cefd06321f</key>
    <value class="cEdge">
      <recordId>879e50e5-3bef-4c6b-8210-32cefd06321f</recordId>
      <label>family</label>
      <inVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</inVertexId>
      <outVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brohter</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>91e21f18-259e-4e3c-8847-b2de5b5bce86</key>
    <value class="cEdge">
      <recordId>91e21f18-259e-4e3c-8847-b2de5b5bce86</recordId>
      <label>family</label>
      <inVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</inVertexId>
      <outVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>a05e783b-c472-4a94-9069-2287ebb32df6</key>
    <value class="cEdge">
      <recordId>a05e783b-c472-4a94-9069-2287ebb32df6</recordId>
      <label>family</label>
      <inVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</inVertexId>
      <outVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">sister-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>b047cd41-e9aa-4184-bbc7-76f08af79ce8</key>
    <value class="cEdge">
      <recordId>b047cd41-e9aa-4184-bbc7-76f08af79ce8</recordId>
      <label>family</label>
      <inVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</inVertexId>
      <outVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>bb7760da-bd65-4781-ae4e-258593eda655</key>
    <value class="cEdge">
      <recordId>bb7760da-bd65-4781-ae4e-258593eda655</recordId>
      <label>family</label>
      <inVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</inVertexId>
      <outVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>13d6f5d6-a7c5-4291-9065-f40060f4e39a</key>
    <value class="cVertex">
      <recordId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</otherEndVertexId>
              <edgeId>91e21f18-259e-4e3c-8847-b2de5b5bce86</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</otherEndVertexId>
              <edgeId>879e50e5-3bef-4c6b-8210-32cefd06321f</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</otherEndVertexId>
              <edgeId>bb7760da-bd65-4781-ae4e-258593eda655</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</otherEndVertexId>
              <edgeId>b047cd41-e9aa-4184-bbc7-76f08af79ce8</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">John</value>
          <recordId>1beb05d4-e831-4697-ba26-8b6e69ccd20d</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>62cb00ed-0c43-41f4-bb5b-8c0744c6ef21</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>aefc44f6-6d22-4db7-8850-d5f65bf99c23</key>
    <value class="cVertex">
      <recordId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</otherEndVertexId>
              <edgeId>bb7760da-bd65-4781-ae4e-258593eda655</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</otherEndVertexId>
              <edgeId>a05e783b-c472-4a94-9069-2287ebb32df6</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</otherEndVertexId>
              <edgeId>10a0c64d-e897-46f6-9563-3fb757085c42</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</otherEndVertexId>
              <edgeId>91e21f18-259e-4e3c-8847-b2de5b5bce86</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>8bff39b5-2aac-4fa0-ab52-b20acef32df9</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jane</value>
          <recordId>0219aee6-3bb6-44ea-93bf-a133786bebbf</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942952074</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</key>
    <value class="cVertex">
      <recordId>b1d52ffc-1d0a-4a91-8623-6d2fe4ca0bf6</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</otherEndVertexId>
              <edgeId>10a0c64d-e897-46f6-9563-3fb757085c42</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</otherEndVertexId>
              <edgeId>b047cd41-e9aa-4184-bbc7-76f08af79ce8</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>aefc44f6-6d22-4db7-8850-d5f65bf99c23</otherEndVertexId>
              <edgeId>a05e783b-c472-4a94-9069-2287ebb32df6</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>13d6f5d6-a7c5-4291-9065-f40060f4e39a</otherEndVertexId>
              <edgeId>879e50e5-3bef-4c6b-8210-32cefd06321f</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>486c7c75-134a-4e57-b7d0-24dbc4713c3d</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jack</value>
          <recordId>556071a7-c8c3-4b27-aed3-179888b4a7be</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
</chronodump>


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using chunked]
    End time:    2017/08/28 19:55:52 (Duration: 642ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using chunked]
    Start time:  2017/08/28 19:55:52
================================================================================



[WARN ] 2017-08-28 19:55:52 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:52 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:53 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using chunked]
    End time:    2017/08/28 19:55:53 (Duration: 1162ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using chunked]
    Start time:  2017/08/28 19:55:53
================================================================================



[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using chunked]
    End time:    2017/08/28 19:55:54 (Duration: 891ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using inmemory]
    Start time:  2017/08/28 19:55:54
================================================================================



<chronodump>
  <dbmetadata>
    <creationDate>2017-08-28 17:55:54.543 UTC</creationDate>
    <chronosVersion>0.7.3-RELEASE</chronosVersion>
    <commitMetadata>
      <org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
        <timestamp>1503942954543</timestamp>
        <branch>master</branch>
      </org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
    </commitMetadata>
    <branchMetadata>
      <branch>
        <name>master</name>
        <branchingTimestamp>0</branchingTimestamp>
      </branch>
    </branchMetadata>
    <indexerMetadata/>
  </dbmetadata>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>0bffafd7-8ed2-4ae1-8b8c-06fe26e90fd6</key>
    <value class="cEdge">
      <recordId>0bffafd7-8ed2-4ae1-8b8c-06fe26e90fd6</recordId>
      <label>family</label>
      <inVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</inVertexId>
      <outVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>2c437b31-45f9-4472-8b2b-52d3aa6abcbe</key>
    <value class="cEdge">
      <recordId>2c437b31-45f9-4472-8b2b-52d3aa6abcbe</recordId>
      <label>family</label>
      <inVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</inVertexId>
      <outVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>41431cb1-a546-4982-812a-4b531a41bfac</key>
    <value class="cEdge">
      <recordId>41431cb1-a546-4982-812a-4b531a41bfac</recordId>
      <label>family</label>
      <inVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</inVertexId>
      <outVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>696ca9d2-2afb-472f-b339-4c0383eb0be9</key>
    <value class="cEdge">
      <recordId>696ca9d2-2afb-472f-b339-4c0383eb0be9</recordId>
      <label>family</label>
      <inVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</inVertexId>
      <outVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>7b6de209-f0a8-442b-b64a-66cac96c63e6</key>
    <value class="cEdge">
      <recordId>7b6de209-f0a8-442b-b64a-66cac96c63e6</recordId>
      <label>family</label>
      <inVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</inVertexId>
      <outVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">sister-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>9a15dcfb-760b-4873-a67b-028b9fc1db4a</key>
    <value class="cEdge">
      <recordId>9a15dcfb-760b-4873-a67b-028b9fc1db4a</recordId>
      <label>family</label>
      <inVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</inVertexId>
      <outVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brohter</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>8605e6e7-4f34-404c-9205-7ce6521d7b04</key>
    <value class="cVertex">
      <recordId>8605e6e7-4f34-404c-9205-7ce6521d7b04</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</otherEndVertexId>
              <edgeId>41431cb1-a546-4982-812a-4b531a41bfac</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</otherEndVertexId>
              <edgeId>2c437b31-45f9-4472-8b2b-52d3aa6abcbe</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</otherEndVertexId>
              <edgeId>7b6de209-f0a8-442b-b64a-66cac96c63e6</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</otherEndVertexId>
              <edgeId>9a15dcfb-760b-4873-a67b-028b9fc1db4a</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jack</value>
          <recordId>b6712673-0497-41e1-95ce-1a64b2e0f1bd</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>8759ca6a-0d99-4dbf-b884-401ae12c849c</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</key>
    <value class="cVertex">
      <recordId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</otherEndVertexId>
              <edgeId>9a15dcfb-760b-4873-a67b-028b9fc1db4a</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</otherEndVertexId>
              <edgeId>0bffafd7-8ed2-4ae1-8b8c-06fe26e90fd6</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</otherEndVertexId>
              <edgeId>2c437b31-45f9-4472-8b2b-52d3aa6abcbe</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</otherEndVertexId>
              <edgeId>696ca9d2-2afb-472f-b339-4c0383eb0be9</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">John</value>
          <recordId>cfd65527-49ea-4fe0-8f18-035d76a7303a</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>1ddfc2f2-4985-426e-b535-118e4fbe845b</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942954543</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</key>
    <value class="cVertex">
      <recordId>a34312c3-03f9-43ef-b9f4-6e5cff4f9fe8</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</otherEndVertexId>
              <edgeId>7b6de209-f0a8-442b-b64a-66cac96c63e6</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</otherEndVertexId>
              <edgeId>696ca9d2-2afb-472f-b339-4c0383eb0be9</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>8f7dd3bf-d36e-43bd-9f1e-60d627bc5463</otherEndVertexId>
              <edgeId>0bffafd7-8ed2-4ae1-8b8c-06fe26e90fd6</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>8605e6e7-4f34-404c-9205-7ce6521d7b04</otherEndVertexId>
              <edgeId>41431cb1-a546-4982-812a-4b531a41bfac</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jane</value>
          <recordId>5460859c-c43b-4fee-aaf0-23b315dfd014</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>dbf78cdf-4387-4d22-8478-26ea0912d43a</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
</chronodump>


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using inmemory]
    End time:    2017/08/28 19:55:54 (Duration: 16ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using inmemory]
    Start time:  2017/08/28 19:55:54
================================================================================



[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:54 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using inmemory]
    End time:    2017/08/28 19:55:55 (Duration: 517ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using inmemory]
    Start time:  2017/08/28 19:55:55
================================================================================



[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:55 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using inmemory]
    End time:    2017/08/28 19:55:55 (Duration: 430ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using jdbc]
    Start time:  2017/08/28 19:55:55
================================================================================



<chronodump>
  <dbmetadata>
    <creationDate>2017-08-28 17:55:55.537 UTC</creationDate>
    <chronosVersion>0.7.3-RELEASE</chronosVersion>
    <commitMetadata>
      <org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
        <timestamp>1503942955521</timestamp>
        <branch>master</branch>
      </org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
    </commitMetadata>
    <branchMetadata>
      <branch>
        <name>master</name>
        <branchingTimestamp>0</branchingTimestamp>
      </branch>
    </branchMetadata>
    <indexerMetadata/>
  </dbmetadata>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>434d5d04-2063-43be-93c4-59ec7f1d6396</key>
    <value class="cEdge">
      <recordId>434d5d04-2063-43be-93c4-59ec7f1d6396</recordId>
      <label>family</label>
      <inVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</inVertexId>
      <outVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>2f5f52ca-7ba3-4e06-8a1c-6a3468046d87</key>
    <value class="cEdge">
      <recordId>2f5f52ca-7ba3-4e06-8a1c-6a3468046d87</recordId>
      <label>family</label>
      <inVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</inVertexId>
      <outVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>3a589d7c-2851-49b7-9c3b-2edac65d732c</key>
    <value class="cEdge">
      <recordId>3a589d7c-2851-49b7-9c3b-2edac65d732c</recordId>
      <label>family</label>
      <inVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</inVertexId>
      <outVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">sister-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>09d7fc82-93bd-473f-b99d-29cd3c695c49</key>
    <value class="cEdge">
      <recordId>09d7fc82-93bd-473f-b99d-29cd3c695c49</recordId>
      <label>family</label>
      <inVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</inVertexId>
      <outVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>bb48d372-0e3a-4ec4-abe7-411a3c75ccc1</key>
    <value class="cEdge">
      <recordId>bb48d372-0e3a-4ec4-abe7-411a3c75ccc1</recordId>
      <label>family</label>
      <inVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</inVertexId>
      <outVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>eb3b1dde-24a5-403a-94ff-fa208344b94e</key>
    <value class="cEdge">
      <recordId>eb3b1dde-24a5-403a-94ff-fa208344b94e</recordId>
      <label>family</label>
      <inVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</inVertexId>
      <outVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brohter</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>b0385b7d-a69a-429b-ae6c-d820efa013ad</key>
    <value class="cVertex">
      <recordId>b0385b7d-a69a-429b-ae6c-d820efa013ad</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</otherEndVertexId>
              <edgeId>434d5d04-2063-43be-93c4-59ec7f1d6396</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</otherEndVertexId>
              <edgeId>2f5f52ca-7ba3-4e06-8a1c-6a3468046d87</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</otherEndVertexId>
              <edgeId>eb3b1dde-24a5-403a-94ff-fa208344b94e</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</otherEndVertexId>
              <edgeId>3a589d7c-2851-49b7-9c3b-2edac65d732c</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>26ee37ae-b4a8-4209-ba7f-8d85599f8eed</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jack</value>
          <recordId>c832219c-0f13-440d-9a90-b5bf81793ebf</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</key>
    <value class="cVertex">
      <recordId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</otherEndVertexId>
              <edgeId>bb48d372-0e3a-4ec4-abe7-411a3c75ccc1</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</otherEndVertexId>
              <edgeId>eb3b1dde-24a5-403a-94ff-fa208344b94e</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</otherEndVertexId>
              <edgeId>2f5f52ca-7ba3-4e06-8a1c-6a3468046d87</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>ca87472c-a912-4f6c-b9da-799e96442eeb</otherEndVertexId>
              <edgeId>09d7fc82-93bd-473f-b99d-29cd3c695c49</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>73f75850-e20a-40fd-bc60-68b414e81ce3</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">John</value>
          <recordId>a8c73f7f-8196-4160-8601-c2e429ae4ff4</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942955521</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>ca87472c-a912-4f6c-b9da-799e96442eeb</key>
    <value class="cVertex">
      <recordId>ca87472c-a912-4f6c-b9da-799e96442eeb</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</otherEndVertexId>
              <edgeId>3a589d7c-2851-49b7-9c3b-2edac65d732c</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</otherEndVertexId>
              <edgeId>09d7fc82-93bd-473f-b99d-29cd3c695c49</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>b0385b7d-a69a-429b-ae6c-d820efa013ad</otherEndVertexId>
              <edgeId>434d5d04-2063-43be-93c4-59ec7f1d6396</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>7ab31d3e-20bc-40d1-af6a-9e7153096ac8</otherEndVertexId>
              <edgeId>bb48d372-0e3a-4ec4-abe7-411a3c75ccc1</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>df8c4e46-a443-4534-aedd-306245634d1b</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jane</value>
          <recordId>b69a19d3-b952-4a51-8bd8-0123ca76c67b</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
</chronodump>


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using jdbc]
    End time:    2017/08/28 19:55:55 (Duration: 62ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using jdbc]
    Start time:  2017/08/28 19:55:55
================================================================================



[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:56 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:57 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using jdbc]
    End time:    2017/08/28 19:55:57 (Duration: 1970ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using jdbc]
    Start time:  2017/08/28 19:55:57
================================================================================



[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:55:58 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using jdbc]
    End time:    2017/08/28 19:55:58 (Duration: 970ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using mapdb]
    Start time:  2017/08/28 19:55:58
================================================================================



<chronodump>
  <dbmetadata>
    <creationDate>2017-08-28 17:55:58.823 UTC</creationDate>
    <chronosVersion>0.7.3-RELEASE</chronosVersion>
    <commitMetadata>
      <org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
        <timestamp>1503942958692</timestamp>
        <branch>master</branch>
      </org.chronos.chronodb.internal.impl.dump.meta.CommitDumpMetadata>
    </commitMetadata>
    <branchMetadata>
      <branch>
        <name>master</name>
        <branchingTimestamp>0</branchingTimestamp>
      </branch>
    </branchMetadata>
    <indexerMetadata/>
  </dbmetadata>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>745332fe-aca0-4224-8ca7-6c6382b5bdfa</key>
    <value class="cEdge">
      <recordId>745332fe-aca0-4224-8ca7-6c6382b5bdfa</recordId>
      <label>family</label>
      <inVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</inVertexId>
      <outVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>746e5496-1918-45e2-bbd8-2914eb8901b2</key>
    <value class="cEdge">
      <recordId>746e5496-1918-45e2-bbd8-2914eb8901b2</recordId>
      <label>family</label>
      <inVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</inVertexId>
      <outVertexId>7d323bf4-4882-4698-872a-c590fc25064e</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>9f806c39-5d86-4795-98ad-a84aedca924a</key>
    <value class="cEdge">
      <recordId>9f806c39-5d86-4795-98ad-a84aedca924a</recordId>
      <label>family</label>
      <inVertexId>7d323bf4-4882-4698-872a-c590fc25064e</inVertexId>
      <outVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">married</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>ab672b79-16fb-4c39-a296-eeacb8bda27e</key>
    <value class="cEdge">
      <recordId>ab672b79-16fb-4c39-a296-eeacb8bda27e</recordId>
      <label>family</label>
      <inVertexId>7d323bf4-4882-4698-872a-c590fc25064e</inVertexId>
      <outVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">sister-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>c5706227-62c9-441b-9dfa-a452cfb05b54</key>
    <value class="cEdge">
      <recordId>c5706227-62c9-441b-9dfa-a452cfb05b54</recordId>
      <label>family</label>
      <inVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</inVertexId>
      <outVertexId>7d323bf4-4882-4698-872a-c590fc25064e</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brother-in-law</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>edge</keyspace>
    <key>f57d6ba3-7389-4a88-95ff-8ed13a3b1aee</key>
    <value class="cEdge">
      <recordId>f57d6ba3-7389-4a88-95ff-8ed13a3b1aee</recordId>
      <label>family</label>
      <inVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</inVertexId>
      <outVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</outVertexId>
      <properties>
        <cPropertyPlain>
          <key>kind</key>
          <value class="string">brohter</value>
        </cPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>7d323bf4-4882-4698-872a-c590fc25064e</key>
    <value class="cVertex">
      <recordId>7d323bf4-4882-4698-872a-c590fc25064e</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</otherEndVertexId>
              <edgeId>ab672b79-16fb-4c39-a296-eeacb8bda27e</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</otherEndVertexId>
              <edgeId>9f806c39-5d86-4795-98ad-a84aedca924a</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</otherEndVertexId>
              <edgeId>c5706227-62c9-441b-9dfa-a452cfb05b54</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</otherEndVertexId>
              <edgeId>746e5496-1918-45e2-bbd8-2914eb8901b2</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>fa73ba2f-3db2-4162-b70c-76c228d195f9</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jane</value>
          <recordId>bb84a801-12de-4775-990b-116ea062d1a3</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>98fa128f-595d-4793-a87d-59dbaaba39cf</key>
    <value class="cVertex">
      <recordId>98fa128f-595d-4793-a87d-59dbaaba39cf</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</otherEndVertexId>
              <edgeId>745332fe-aca0-4224-8ca7-6c6382b5bdfa</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>7d323bf4-4882-4698-872a-c590fc25064e</otherEndVertexId>
              <edgeId>c5706227-62c9-441b-9dfa-a452cfb05b54</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>7d323bf4-4882-4698-872a-c590fc25064e</otherEndVertexId>
              <edgeId>ab672b79-16fb-4c39-a296-eeacb8bda27e</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</otherEndVertexId>
              <edgeId>f57d6ba3-7389-4a88-95ff-8ed13a3b1aee</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">Jack</value>
          <recordId>e4de2c32-dd95-4b3a-8c21-7cb24e022d80</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>d83ae187-cc46-4ea5-9ded-fcbee6425148</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
  <dbentryPlain>
    <timestamp>1503942958692</timestamp>
    <branch>master</branch>
    <keyspace>vertex</keyspace>
    <key>cd53ee86-cb38-4db8-b4c4-e82e490fa603</key>
    <value class="cVertex">
      <recordId>cd53ee86-cb38-4db8-b4c4-e82e490fa603</recordId>
      <label>vertex</label>
      <incomingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>7d323bf4-4882-4698-872a-c590fc25064e</otherEndVertexId>
              <edgeId>746e5496-1918-45e2-bbd8-2914eb8901b2</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</otherEndVertexId>
              <edgeId>f57d6ba3-7389-4a88-95ff-8ed13a3b1aee</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </incomingEdges>
      <outgoingEdges>
        <entry>
          <string>family</string>
          <set>
            <cEdgeTarget>
              <otherEndVertexId>98fa128f-595d-4793-a87d-59dbaaba39cf</otherEndVertexId>
              <edgeId>745332fe-aca0-4224-8ca7-6c6382b5bdfa</edgeId>
            </cEdgeTarget>
            <cEdgeTarget>
              <otherEndVertexId>7d323bf4-4882-4698-872a-c590fc25064e</otherEndVertexId>
              <edgeId>9f806c39-5d86-4795-98ad-a84aedca924a</edgeId>
            </cEdgeTarget>
          </set>
        </entry>
      </outgoingEdges>
      <properties>
        <cVertexPropertyPlain>
          <key>firstname</key>
          <value class="string">John</value>
          <recordId>53397958-d580-4a82-82a7-341d7b29ac05</recordId>
          <properties/>
        </cVertexPropertyPlain>
        <cVertexPropertyPlain>
          <key>lastname</key>
          <value class="string">Doe</value>
          <recordId>59fd261a-2968-40da-bff8-9a193fc4b56d</recordId>
          <properties/>
        </cVertexPropertyPlain>
      </properties>
    </value>
  </dbentryPlain>
</chronodump>


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreateGraphDump[Using mapdb]
    End time:    2017/08/28 19:55:59 (Duration: 731ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using mapdb]
    Start time:  2017/08/28 19:55:59
================================================================================



[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:56:02 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:56:03 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:56:04 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:05 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:56:06 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:56:07 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:56:08 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canCreadDumpWithoutCaching[Using mapdb]
    End time:    2017/08/28 19:56:08 (Duration: 9259ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using mapdb]
    Start time:  2017/08/28 19:56:08
================================================================================



[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:11 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:12 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:13 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:14 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498474766935
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498440487908
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498423348395
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498406208882
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498371929855
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498354790342
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498337650829
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498320511316
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498303371803
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498269092776
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498251953263
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498234813750
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498217674237
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498183395210
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498166255697
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498149116184
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498097697644
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498080558131
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498046279105
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1498029139591
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497994860565
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497943442025
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497926302512
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497789186407
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497754907380
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497737767867
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497617791275
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497532093709
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1497480675169
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1494926887703
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1475216447529
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1469234757424
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468069270526
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468052131013
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468017851987
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1468000712474
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467983572960
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1467966433447
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.
Checking timestamp 1466852365090
[WARN ] 2017-08-28 19:56:15 [    Test worker] [StandardChronoGraphTransaction]:  Query requires iterating over all vertices. For better performance, use 'has(...)' clauses in your gremlin.


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  ChronoGraphDumpTest
    Test method: canReadDumpWithCaching[Using mapdb]
    End time:    2017/08/28 19:56:15 (Duration: 7368ms)
================================================================================



[INFO ] 2017-08-28 19:56:15 [    Test worker] [    o.c.c.test.ChronosUnitTest]:  Attempting to delete temp directory provided at: C:\Users\Martin\AppData\Local\Temp\ChronoDBTest318862688473434810
[INFO ] 2017-08-28 19:56:15 [    Test worker] [    o.c.c.test.ChronosUnitTest]:  Successfully deleted temp directory
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
