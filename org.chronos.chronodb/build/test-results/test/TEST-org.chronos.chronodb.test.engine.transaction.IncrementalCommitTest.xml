<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" tests="85" skipped="0" failures="0" errors="0" timestamp="2017-08-28T17:53:53" hostname="Aurora" time="17.091">
  <properties/>
  <testcase name="getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.482"/>
  <testcase name="canInsertAndRemoveDuringIncrementalCommit[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.66"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModifications[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.284"/>
  <testcase name="incrementalCommitsAppearAsSingleCommitInHistory[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.279"/>
  <testcase name="canUpdateAndRemoveDuringIncrementalCommit[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.586"/>
  <testcase name="canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.554"/>
  <testcase name="canCommitIncrementally[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.401"/>
  <testcase name="renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.632"/>
  <testcase name="cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.401"/>
  <testcase name="otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.417"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.416"/>
  <testcase name="canCommitIncrementallyMoreThanTwice[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.286"/>
  <testcase name="multipleIncrementalCommitsOnExistingDataWork[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.77"/>
  <testcase name="secondaryIndexingIsCorrectDuringIncrementalCommit[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.817"/>
  <testcase name="canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.586"/>
  <testcase name="rollbackDuringIncrementalCommitWorks[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.485"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using mapdb]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.417"/>
  <testcase name="getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.024"/>
  <testcase name="canInsertAndRemoveDuringIncrementalCommit[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.021"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModifications[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.024"/>
  <testcase name="incrementalCommitsAppearAsSingleCommitInHistory[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.031"/>
  <testcase name="canUpdateAndRemoveDuringIncrementalCommit[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.028"/>
  <testcase name="canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.027"/>
  <testcase name="canCommitIncrementally[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.014"/>
  <testcase name="renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.027"/>
  <testcase name="cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.016"/>
  <testcase name="otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.017"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.037"/>
  <testcase name="canCommitIncrementallyMoreThanTwice[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.018"/>
  <testcase name="multipleIncrementalCommitsOnExistingDataWork[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.023"/>
  <testcase name="secondaryIndexingIsCorrectDuringIncrementalCommit[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.015"/>
  <testcase name="canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.034"/>
  <testcase name="rollbackDuringIncrementalCommitWorks[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.013"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using jdbc]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.031"/>
  <testcase name="getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.085"/>
  <testcase name="canInsertAndRemoveDuringIncrementalCommit[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.185"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModifications[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.078"/>
  <testcase name="incrementalCommitsAppearAsSingleCommitInHistory[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.084"/>
  <testcase name="canUpdateAndRemoveDuringIncrementalCommit[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.202"/>
  <testcase name="canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.199"/>
  <testcase name="canCommitIncrementally[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.17"/>
  <testcase name="renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.247"/>
  <testcase name="cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.154"/>
  <testcase name="otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.169"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.232"/>
  <testcase name="canCommitIncrementallyMoreThanTwice[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.169"/>
  <testcase name="multipleIncrementalCommitsOnExistingDataWork[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.301"/>
  <testcase name="secondaryIndexingIsCorrectDuringIncrementalCommit[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.316"/>
  <testcase name="canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.127"/>
  <testcase name="rollbackDuringIncrementalCommitWorks[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.089"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using tupl]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.133"/>
  <testcase name="getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.01"/>
  <testcase name="canInsertAndRemoveDuringIncrementalCommit[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.002"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModifications[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.0"/>
  <testcase name="incrementalCommitsAppearAsSingleCommitInHistory[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.0"/>
  <testcase name="canUpdateAndRemoveDuringIncrementalCommit[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.005"/>
  <testcase name="canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.004"/>
  <testcase name="canCommitIncrementally[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.001"/>
  <testcase name="renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.003"/>
  <testcase name="cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.001"/>
  <testcase name="otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.001"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.004"/>
  <testcase name="canCommitIncrementallyMoreThanTwice[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.001"/>
  <testcase name="multipleIncrementalCommitsOnExistingDataWork[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.002"/>
  <testcase name="secondaryIndexingIsCorrectDuringIncrementalCommit[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.002"/>
  <testcase name="canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.003"/>
  <testcase name="rollbackDuringIncrementalCommitWorks[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.0"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using inmemory]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.0"/>
  <testcase name="getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.197"/>
  <testcase name="canInsertAndRemoveDuringIncrementalCommit[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.199"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModifications[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.18"/>
  <testcase name="incrementalCommitsAppearAsSingleCommitInHistory[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.3"/>
  <testcase name="canUpdateAndRemoveDuringIncrementalCommit[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.37"/>
  <testcase name="canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.4"/>
  <testcase name="canCommitIncrementally[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.354"/>
  <testcase name="renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.348"/>
  <testcase name="cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.454"/>
  <testcase name="otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.2"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.2"/>
  <testcase name="canCommitIncrementallyMoreThanTwice[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.201"/>
  <testcase name="multipleIncrementalCommitsOnExistingDataWork[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.401"/>
  <testcase name="secondaryIndexingIsCorrectDuringIncrementalCommit[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.35"/>
  <testcase name="canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.383"/>
  <testcase name="rollbackDuringIncrementalCommitWorks[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.364"/>
  <testcase name="incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using chunked]" classname="org.chronos.chronodb.test.engine.transaction.IncrementalCommitTest" time="0.338"/>
  <system-out><![CDATA[19:53:53.988 [Test worker] INFO  o.c.common.test.ChronosUnitTest - Temp directory is provided at: C:\Users\Martin\AppData\Local\Temp\ChronoDBTest5529815287975316420


================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using mapdb]
    Start time:  2017/08/28 19:53:53
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using mapdb]
    End time:    2017/08/28 19:53:54 (Duration: 482ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using mapdb]
    Start time:  2017/08/28 19:53:54
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using mapdb]
    End time:    2017/08/28 19:53:55 (Duration: 660ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using mapdb]
    Start time:  2017/08/28 19:53:55
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using mapdb]
    End time:    2017/08/28 19:53:55 (Duration: 284ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using mapdb]
    Start time:  2017/08/28 19:53:55
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using mapdb]
    End time:    2017/08/28 19:53:55 (Duration: 279ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using mapdb]
    Start time:  2017/08/28 19:53:55
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using mapdb]
    End time:    2017/08/28 19:53:56 (Duration: 586ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using mapdb]
    Start time:  2017/08/28 19:53:56
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using mapdb]
    End time:    2017/08/28 19:53:56 (Duration: 554ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using mapdb]
    Start time:  2017/08/28 19:53:56
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using mapdb]
    End time:    2017/08/28 19:53:57 (Duration: 401ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using mapdb]
    Start time:  2017/08/28 19:53:57
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using mapdb]
    End time:    2017/08/28 19:53:57 (Duration: 632ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using mapdb]
    Start time:  2017/08/28 19:53:57
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using mapdb]
    End time:    2017/08/28 19:53:58 (Duration: 401ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using mapdb]
    Start time:  2017/08/28 19:53:58
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using mapdb]
    End time:    2017/08/28 19:53:58 (Duration: 417ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using mapdb]
    Start time:  2017/08/28 19:53:58
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using mapdb]
    End time:    2017/08/28 19:53:59 (Duration: 416ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using mapdb]
    Start time:  2017/08/28 19:53:59
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using mapdb]
    End time:    2017/08/28 19:53:59 (Duration: 286ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using mapdb]
    Start time:  2017/08/28 19:53:59
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using mapdb]
    End time:    2017/08/28 19:54:00 (Duration: 770ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using mapdb]
    Start time:  2017/08/28 19:54:00
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using mapdb]
    End time:    2017/08/28 19:54:00 (Duration: 817ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using mapdb]
    Start time:  2017/08/28 19:54:00
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using mapdb]
    End time:    2017/08/28 19:54:01 (Duration: 586ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using mapdb]
    Start time:  2017/08/28 19:54:01
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using mapdb]
    End time:    2017/08/28 19:54:02 (Duration: 485ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using mapdb]
    Start time:  2017/08/28 19:54:02
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using mapdb]
    End time:    2017/08/28 19:54:02 (Duration: 417ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.461 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|165bab87,name=1hgeqrl9qbn6pz6yfah30|165bab87 registered.
19:54:02.476 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|165bab87,name=1hgeqrl9qbn6pz6yfah30|165bab87 unregistered, in order to be reregistered after update.
19:54:02.476 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|165bab87,name=1hgeqrl9qbn6pz6yfah30|165bab87 registered.
19:54:02.476 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@449d7812 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@93aae622 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|5b320f77, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8ba067e8 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|63de6840, jdbcUrl -> jdbc:h2:mem:1f1ddb71cb6c4ae483122f03f353f3be, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|165bab87, numHelperThreads -> 3 ]
19:54:02.476 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@104dc441 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.476 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.476 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.476 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.485 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|165bab87,name=1hgeqrl9qbn6pz6yfah30|165bab87 unregistered.
19:54:02.485 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@28f3ea5a
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@28f3ea5a
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@28f3ea5a
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@28f3ea5a
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@7869ba4
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@7869ba4
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@7869ba4
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@7869ba4
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@65938e69
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@65938e69
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@65938e69
19:54:02.485 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@65938e69


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 24ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.485 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6894421f,name=1hgeqrl9qbn6pz6yfah30|6894421f registered.
19:54:02.485 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6894421f,name=1hgeqrl9qbn6pz6yfah30|6894421f unregistered, in order to be reregistered after update.
19:54:02.485 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6894421f,name=1hgeqrl9qbn6pz6yfah30|6894421f registered.
19:54:02.485 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@cf352174 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@63436856 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|2d215101, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@29c74124 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|5d32cf2a, jdbcUrl -> jdbc:h2:mem:322a57f80b62482d995564e4e479f9f9, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|6894421f, numHelperThreads -> 3 ]
19:54:02.485 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@42ef94b4 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.485 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.485 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.485 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.506 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6894421f,name=1hgeqrl9qbn6pz6yfah30|6894421f unregistered.
19:54:02.506 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@1d392999
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@1d392999
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@1d392999
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@1d392999
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@19394f20
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@19394f20
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@19394f20
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@19394f20
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@68a1be25
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@68a1be25
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@68a1be25
19:54:02.506 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@68a1be25


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 21ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.506 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|31284ee5,name=1hgeqrl9qbn6pz6yfah30|31284ee5 registered.
19:54:02.506 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|31284ee5,name=1hgeqrl9qbn6pz6yfah30|31284ee5 unregistered, in order to be reregistered after update.
19:54:02.506 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|31284ee5,name=1hgeqrl9qbn6pz6yfah30|31284ee5 registered.
19:54:02.506 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@84dd0f9f [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@d1514f42 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|7ed732ce, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@87d5bbb [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|1ff39cda, jdbcUrl -> jdbc:h2:mem:1ef3a975561a46959eac95322bb9bb4c, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|31284ee5, numHelperThreads -> 3 ]
19:54:02.506 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@68ffca2e config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.506 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.506 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.506 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.530 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|31284ee5,name=1hgeqrl9qbn6pz6yfah30|31284ee5 unregistered.
19:54:02.530 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5b38aafb
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5b38aafb
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5b38aafb
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5b38aafb
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@619fe282
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@619fe282
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@619fe282
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@619fe282
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@7c5cc742
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@7c5cc742
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@7c5cc742
19:54:02.530 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@7c5cc742


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 24ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.530 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3fbca002,name=1hgeqrl9qbn6pz6yfah30|3fbca002 registered.
19:54:02.545 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3fbca002,name=1hgeqrl9qbn6pz6yfah30|3fbca002 unregistered, in order to be reregistered after update.
19:54:02.545 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3fbca002,name=1hgeqrl9qbn6pz6yfah30|3fbca002 registered.
19:54:02.545 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@3cd8935f [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@63a0b294 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|1a4d11a1, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@45538849 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|1666e39a, jdbcUrl -> jdbc:h2:mem:6c58709c39e84a119019ada15fae202d, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|3fbca002, numHelperThreads -> 3 ]
19:54:02.545 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@56b141c3 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.545 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.545 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.545 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.561 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3fbca002,name=1hgeqrl9qbn6pz6yfah30|3fbca002 unregistered.
19:54:02.561 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6c23e753
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6c23e753
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6c23e753
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6c23e753
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5b84c2
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5b84c2
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5b84c2
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5b84c2
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@26c5b4d6
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@26c5b4d6
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@26c5b4d6
19:54:02.561 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@26c5b4d6


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 31ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.561 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5f2ccf5b,name=1hgeqrl9qbn6pz6yfah30|5f2ccf5b registered.
19:54:02.577 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5f2ccf5b,name=1hgeqrl9qbn6pz6yfah30|5f2ccf5b unregistered, in order to be reregistered after update.
19:54:02.577 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5f2ccf5b,name=1hgeqrl9qbn6pz6yfah30|5f2ccf5b registered.
19:54:02.577 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@befd2332 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@5be76b38 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|5c3f1fa7, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@8d1c618a [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|5426ab4, jdbcUrl -> jdbc:h2:mem:c692bf230a8b4627a42c1017fd3c9de1, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|5f2ccf5b, numHelperThreads -> 3 ]
19:54:02.577 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@6a928597 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.577 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.577 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.577 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.589 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5f2ccf5b,name=1hgeqrl9qbn6pz6yfah30|5f2ccf5b unregistered.
19:54:02.589 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5c4b8526
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5c4b8526
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5c4b8526
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5c4b8526
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@276df1db
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@276df1db
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@276df1db
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@276df1db
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@43e78f48
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@43e78f48
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@43e78f48
19:54:02.589 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@43e78f48


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 28ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.589 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|437be00d,name=1hgeqrl9qbn6pz6yfah30|437be00d registered.
19:54:02.605 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|437be00d,name=1hgeqrl9qbn6pz6yfah30|437be00d unregistered, in order to be reregistered after update.
19:54:02.605 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|437be00d,name=1hgeqrl9qbn6pz6yfah30|437be00d registered.
19:54:02.605 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a841dcfb [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@3791aca6 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|5f66cce, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@445e52a9 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|3ad87bd2, jdbcUrl -> jdbc:h2:mem:48a2d6b16da84801abc59f5a66df14c8, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|437be00d, numHelperThreads -> 3 ]
19:54:02.605 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@229c434e config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.605 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.605 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.605 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.615 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|437be00d,name=1hgeqrl9qbn6pz6yfah30|437be00d unregistered.
19:54:02.615 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2edf3b99
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2edf3b99
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2edf3b99
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2edf3b99
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@898537e
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@898537e
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@898537e
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@898537e
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@22fc0522
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@22fc0522
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@22fc0522
19:54:02.616 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@22fc0522


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 27ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.620 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|611bcb9,name=1hgeqrl9qbn6pz6yfah30|611bcb9 registered.
19:54:02.627 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|611bcb9,name=1hgeqrl9qbn6pz6yfah30|611bcb9 unregistered, in order to be reregistered after update.
19:54:02.627 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|611bcb9,name=1hgeqrl9qbn6pz6yfah30|611bcb9 registered.
19:54:02.627 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@5d4ebfcc [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@be078b29 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|4c82b961, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@9a236cbf [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|3a204492, jdbcUrl -> jdbc:h2:mem:b94472f907f84e87b56526f2bcc54fd7, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|611bcb9, numHelperThreads -> 3 ]
19:54:02.627 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@38b07280 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.627 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.627 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.627 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.630 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|611bcb9,name=1hgeqrl9qbn6pz6yfah30|611bcb9 unregistered.
19:54:02.630 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@29f7d217
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@29f7d217
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@29f7d217
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@29f7d217
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@65439589
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@65439589
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@65439589
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@65439589
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5e6188b6
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5e6188b6
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5e6188b6
19:54:02.630 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5e6188b6


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 14ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.630 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|703db54f,name=1hgeqrl9qbn6pz6yfah30|703db54f registered.
19:54:02.645 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|703db54f,name=1hgeqrl9qbn6pz6yfah30|703db54f unregistered, in order to be reregistered after update.
19:54:02.645 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|703db54f,name=1hgeqrl9qbn6pz6yfah30|703db54f registered.
19:54:02.645 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@16098575 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@68ce61a9 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|78887a1a, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@bfffbe80 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6d475b17, jdbcUrl -> jdbc:h2:mem:11b5aed1633d4d569b90c51405e1f027, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|703db54f, numHelperThreads -> 3 ]
19:54:02.645 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@50205fb4 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.645 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.645 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.645 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.657 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|703db54f,name=1hgeqrl9qbn6pz6yfah30|703db54f unregistered.
19:54:02.657 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@69a340aa
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@69a340aa
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@69a340aa
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@69a340aa
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@49cd7614
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@49cd7614
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@49cd7614
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@49cd7614
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6e7f41f0
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6e7f41f0
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6e7f41f0
19:54:02.657 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6e7f41f0


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 27ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.657 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|47437969,name=1hgeqrl9qbn6pz6yfah30|47437969 registered.
19:54:02.657 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|47437969,name=1hgeqrl9qbn6pz6yfah30|47437969 unregistered, in order to be reregistered after update.
19:54:02.657 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|47437969,name=1hgeqrl9qbn6pz6yfah30|47437969 registered.
19:54:02.657 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@dc72913d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@6c4a8000 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|5fd51553, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@2190f37b [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6b90f7d9, jdbcUrl -> jdbc:h2:mem:c60442c75c2140439f2c3cb8871bc752, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|47437969, numHelperThreads -> 3 ]
19:54:02.657 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@195e28d0 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.657 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.657 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.657 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.673 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|47437969,name=1hgeqrl9qbn6pz6yfah30|47437969 unregistered.
19:54:02.673 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@1036a416
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@1036a416
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@1036a416
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@1036a416
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@fa77996
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@fa77996
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@fa77996
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@fa77996
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@13ba74fe
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@13ba74fe
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@13ba74fe
19:54:02.673 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@13ba74fe


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 16ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.673 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|8a8f553,name=1hgeqrl9qbn6pz6yfah30|8a8f553 registered.
19:54:02.690 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|8a8f553,name=1hgeqrl9qbn6pz6yfah30|8a8f553 unregistered, in order to be reregistered after update.
19:54:02.690 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|8a8f553,name=1hgeqrl9qbn6pz6yfah30|8a8f553 registered.
19:54:02.690 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@a135e79e [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@a6f48aba [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|7ac112d5, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@c4ee128e [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6d19abed, jdbcUrl -> jdbc:h2:mem:95e4a705f8c341458aa3451fd5f001dc, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|8a8f553, numHelperThreads -> 3 ]
19:54:02.690 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@3cea3c9 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.690 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.690 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.690 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.690 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|8a8f553,name=1hgeqrl9qbn6pz6yfah30|8a8f553 unregistered.
19:54:02.690 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2dd32188
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2dd32188
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2dd32188
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2dd32188
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2b09f5bc
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2b09f5bc
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2b09f5bc
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2b09f5bc
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@23dd6500
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@23dd6500
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@23dd6500
19:54:02.690 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@23dd6500


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 17ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.705 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|42f32471,name=1hgeqrl9qbn6pz6yfah30|42f32471 registered.
19:54:02.705 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|42f32471,name=1hgeqrl9qbn6pz6yfah30|42f32471 unregistered, in order to be reregistered after update.
19:54:02.705 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|42f32471,name=1hgeqrl9qbn6pz6yfah30|42f32471 registered.
19:54:02.705 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@8fa1c2fd [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@97003e1a [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|2c1e8849, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@ec4c893f [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|858c1e7, jdbcUrl -> jdbc:h2:mem:3dfe86c29a58411dbf6aa6d0a1fcf9d9, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|42f32471, numHelperThreads -> 3 ]
19:54:02.705 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@8dc7b7c config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.705 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.705 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.705 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.726 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|42f32471,name=1hgeqrl9qbn6pz6yfah30|42f32471 unregistered.
19:54:02.726 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4652b8fe
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4652b8fe
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4652b8fe
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4652b8fe
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@58f63ee3
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@58f63ee3
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@58f63ee3
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@58f63ee3
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@395fb0f1
19:54:02.726 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@395fb0f1
19:54:02.727 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@395fb0f1
19:54:02.727 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@395fb0f1


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 37ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.730 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4bb6c943,name=1hgeqrl9qbn6pz6yfah30|4bb6c943 registered.
19:54:02.730 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4bb6c943,name=1hgeqrl9qbn6pz6yfah30|4bb6c943 unregistered, in order to be reregistered after update.
19:54:02.730 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4bb6c943,name=1hgeqrl9qbn6pz6yfah30|4bb6c943 registered.
19:54:02.730 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@ab096a2d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@7150caa4 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|286b1c40, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@c0761a74 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|25f77b5f, jdbcUrl -> jdbc:h2:mem:90a5b34757dc453b84c2eceefb0ad2f3, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|4bb6c943, numHelperThreads -> 3 ]
19:54:02.730 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@46f39704 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.730 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.730 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.730 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.745 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4bb6c943,name=1hgeqrl9qbn6pz6yfah30|4bb6c943 unregistered.
19:54:02.745 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2208e338
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2208e338
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@2208e338
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@2208e338
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3601ce4d
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3601ce4d
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3601ce4d
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3601ce4d
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3a20c72e
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3a20c72e
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3a20c72e
19:54:02.745 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3a20c72e


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 18ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.745 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|32e5c4cd,name=1hgeqrl9qbn6pz6yfah30|32e5c4cd registered.
19:54:02.745 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|32e5c4cd,name=1hgeqrl9qbn6pz6yfah30|32e5c4cd unregistered, in order to be reregistered after update.
19:54:02.745 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|32e5c4cd,name=1hgeqrl9qbn6pz6yfah30|32e5c4cd registered.
19:54:02.745 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@f9054dc3 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@58b2e1be [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6a6f4b96, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@243aac2b [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|57c4e4a8, jdbcUrl -> jdbc:h2:mem:3306e15c082c4cf493ac8c6728badecd, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|32e5c4cd, numHelperThreads -> 3 ]
19:54:02.745 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@5666b9ca config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.745 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.745 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.745 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.768 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|32e5c4cd,name=1hgeqrl9qbn6pz6yfah30|32e5c4cd unregistered.
19:54:02.768 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@473306bf
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@473306bf
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@473306bf
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@473306bf
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@11a3f186
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@11a3f186
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@11a3f186
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@11a3f186
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@16dc0933
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@16dc0933
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@16dc0933
19:54:02.768 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@16dc0933


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 23ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.768 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4ae686a2,name=1hgeqrl9qbn6pz6yfah30|4ae686a2 registered.
19:54:02.768 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4ae686a2,name=1hgeqrl9qbn6pz6yfah30|4ae686a2 unregistered, in order to be reregistered after update.
19:54:02.768 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4ae686a2,name=1hgeqrl9qbn6pz6yfah30|4ae686a2 registered.
19:54:02.768 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@dae4ad57 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@bcc14506 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|473e62e, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@f48683b8 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|53e2d6b1, jdbcUrl -> jdbc:h2:mem:1562cc6433e74a0d97199601968a9798, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|4ae686a2, numHelperThreads -> 3 ]
19:54:02.783 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@3464643b config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.783 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.783 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.783 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.783 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|4ae686a2,name=1hgeqrl9qbn6pz6yfah30|4ae686a2 unregistered.
19:54:02.783 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@789bf81
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@789bf81
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@789bf81
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@789bf81
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3e5a9aeb
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3e5a9aeb
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3e5a9aeb
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3e5a9aeb
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@bedf042
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@bedf042
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@bedf042
19:54:02.783 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@bedf042


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 15ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.799 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5e30422,name=1hgeqrl9qbn6pz6yfah30|5e30422 registered.
19:54:02.799 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5e30422,name=1hgeqrl9qbn6pz6yfah30|5e30422 unregistered, in order to be reregistered after update.
19:54:02.799 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5e30422,name=1hgeqrl9qbn6pz6yfah30|5e30422 registered.
19:54:02.799 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@39743c93 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@da416e05 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|717ec09c, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@b974cee3 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|4c9fcf79, jdbcUrl -> jdbc:h2:mem:1ab930a98b6244b498071408433ca0e8, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|5e30422, numHelperThreads -> 3 ]
19:54:02.799 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@459b8c6f config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.799 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.799 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.799 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.816 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5e30422,name=1hgeqrl9qbn6pz6yfah30|5e30422 unregistered.
19:54:02.816 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@15e06581
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@15e06581
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@15e06581
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@15e06581
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@66de3189
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@66de3189
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@66de3189
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@66de3189
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5c65c2ca
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5c65c2ca
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5c65c2ca
19:54:02.817 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5c65c2ca


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 34ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.821 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3ed9f2b1,name=1hgeqrl9qbn6pz6yfah30|3ed9f2b1 registered.
19:54:02.828 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3ed9f2b1,name=1hgeqrl9qbn6pz6yfah30|3ed9f2b1 unregistered, in order to be reregistered after update.
19:54:02.828 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3ed9f2b1,name=1hgeqrl9qbn6pz6yfah30|3ed9f2b1 registered.
19:54:02.828 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@70a2a522 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@136ada58 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|254b6ee1, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@d6441dc [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|708fd12f, jdbcUrl -> jdbc:h2:mem:616ad06145de426aa65437e43e3c37dd, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|3ed9f2b1, numHelperThreads -> 3 ]
19:54:02.828 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@15d8c6c2 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.828 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.828 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.828 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.830 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|3ed9f2b1,name=1hgeqrl9qbn6pz6yfah30|3ed9f2b1 unregistered.
19:54:02.830 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@744ee3ba
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@744ee3ba
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@744ee3ba
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@744ee3ba
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@64ce1e03
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@64ce1e03
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@64ce1e03
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@64ce1e03
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4b48a006
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4b48a006
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4b48a006
19:54:02.830 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4b48a006


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 13ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using jdbc]
    Start time:  2017/08/28 19:54:02
================================================================================



19:54:02.830 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|63fa50bf,name=1hgeqrl9qbn6pz6yfah30|63fa50bf registered.
19:54:02.845 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|63fa50bf,name=1hgeqrl9qbn6pz6yfah30|63fa50bf unregistered, in order to be reregistered after update.
19:54:02.845 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|63fa50bf,name=1hgeqrl9qbn6pz6yfah30|63fa50bf registered.
19:54:02.845 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@886fa14d [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@5a76163b [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6a5e511c, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@411ffefa [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|3af5689d, jdbcUrl -> jdbc:h2:mem:b2106f302bc04194bfb711951fa4f666, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|63fa50bf, numHelperThreads -> 3 ]
19:54:02.845 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@6090401f config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:54:02.845 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:54:02.845 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:54:02.845 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:54:02.861 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|63fa50bf,name=1hgeqrl9qbn6pz6yfah30|63fa50bf unregistered.
19:54:02.861 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@429d33dd
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@429d33dd
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@429d33dd
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@429d33dd
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@630e8ede
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@630e8ede
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@630e8ede
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@630e8ede
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@f2b30ff
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@f2b30ff
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@f2b30ff
19:54:02.861 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@f2b30ff


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using jdbc]
    End time:    2017/08/28 19:54:02 (Duration: 31ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using tupl]
    Start time:  2017/08/28 19:54:02
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using tupl]
    End time:    2017/08/28 19:54:02 (Duration: 85ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using tupl]
    Start time:  2017/08/28 19:54:02
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using tupl]
    End time:    2017/08/28 19:54:03 (Duration: 185ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using tupl]
    Start time:  2017/08/28 19:54:03
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using tupl]
    End time:    2017/08/28 19:54:03 (Duration: 78ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using tupl]
    Start time:  2017/08/28 19:54:03
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using tupl]
    End time:    2017/08/28 19:54:03 (Duration: 84ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using tupl]
    Start time:  2017/08/28 19:54:03
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using tupl]
    End time:    2017/08/28 19:54:03 (Duration: 202ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using tupl]
    Start time:  2017/08/28 19:54:03
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using tupl]
    End time:    2017/08/28 19:54:03 (Duration: 199ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using tupl]
    Start time:  2017/08/28 19:54:03
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using tupl]
    End time:    2017/08/28 19:54:03 (Duration: 170ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using tupl]
    Start time:  2017/08/28 19:54:03
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using tupl]
    End time:    2017/08/28 19:54:04 (Duration: 247ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using tupl]
    Start time:  2017/08/28 19:54:04
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using tupl]
    End time:    2017/08/28 19:54:04 (Duration: 154ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using tupl]
    Start time:  2017/08/28 19:54:04
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using tupl]
    End time:    2017/08/28 19:54:04 (Duration: 169ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using tupl]
    Start time:  2017/08/28 19:54:04
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using tupl]
    End time:    2017/08/28 19:54:04 (Duration: 232ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using tupl]
    Start time:  2017/08/28 19:54:04
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using tupl]
    End time:    2017/08/28 19:54:04 (Duration: 169ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using tupl]
    Start time:  2017/08/28 19:54:04
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using tupl]
    End time:    2017/08/28 19:54:05 (Duration: 301ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using tupl]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using tupl]
    End time:    2017/08/28 19:54:05 (Duration: 316ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using tupl]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using tupl]
    End time:    2017/08/28 19:54:05 (Duration: 127ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using tupl]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using tupl]
    End time:    2017/08/28 19:54:05 (Duration: 89ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using tupl]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using tupl]
    End time:    2017/08/28 19:54:05 (Duration: 133ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 10ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 2ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 5ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 4ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 1ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 3ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 1ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 1ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 3ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 2ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 2ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 3ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using inmemory]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using inmemory]
    End time:    2017/08/28 19:54:05 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using chunked]
    Start time:  2017/08/28 19:54:05
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: getAndExistsWorkProperlyAfterDeletionDuringIncrementalCommit[Using chunked]
    End time:    2017/08/28 19:54:06 (Duration: 197ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using chunked]
    Start time:  2017/08/28 19:54:06
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canInsertAndRemoveDuringIncrementalCommit[Using chunked]
    End time:    2017/08/28 19:54:06 (Duration: 198ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using chunked]
    Start time:  2017/08/28 19:54:06
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModifications[Using chunked]
    End time:    2017/08/28 19:54:06 (Duration: 180ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using chunked]
    Start time:  2017/08/28 19:54:06
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitsAppearAsSingleCommitInHistory[Using chunked]
    End time:    2017/08/28 19:54:06 (Duration: 300ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using chunked]
    Start time:  2017/08/28 19:54:06
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canUpdateAndRemoveDuringIncrementalCommit[Using chunked]
    End time:    2017/08/28 19:54:07 (Duration: 370ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using chunked]
    Start time:  2017/08/28 19:54:07
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCanceledIncrementalCommitProcess[Using chunked]
    End time:    2017/08/28 19:54:07 (Duration: 400ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using chunked]
    Start time:  2017/08/28 19:54:07
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementally[Using chunked]
    End time:    2017/08/28 19:54:07 (Duration: 354ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using chunked]
    Start time:  2017/08/28 19:54:07
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: renamingElementsInSecondaryIndexDuringIncrementalCommitWorks[Using chunked]
    End time:    2017/08/28 19:54:08 (Duration: 348ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using chunked]
    Start time:  2017/08/28 19:54:08
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: cannotCommitOnOtherTransactionWhileIncrementalCommitProcessIsRunning[Using chunked]
    End time:    2017/08/28 19:54:08 (Duration: 454ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using chunked]
    Start time:  2017/08/28 19:54:08
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: otherTransactionsCannotSeeChangesPerformedByIncrementalCommits[Using chunked]
    End time:    2017/08/28 19:54:08 (Duration: 200ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using chunked]
    Start time:  2017/08/28 19:54:08
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexerWithQueryCaching[Using chunked]
    End time:    2017/08/28 19:54:09 (Duration: 200ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using chunked]
    Start time:  2017/08/28 19:54:09
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitIncrementallyMoreThanTwice[Using chunked]
    End time:    2017/08/28 19:54:09 (Duration: 201ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using chunked]
    Start time:  2017/08/28 19:54:09
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: multipleIncrementalCommitsOnExistingDataWork[Using chunked]
    End time:    2017/08/28 19:54:09 (Duration: 401ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using chunked]
    Start time:  2017/08/28 19:54:09
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: secondaryIndexingIsCorrectDuringIncrementalCommit[Using chunked]
    End time:    2017/08/28 19:54:09 (Duration: 350ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using chunked]
    Start time:  2017/08/28 19:54:09
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: canCommitRegularlyAfterCompletedIncrementalCommitProcess[Using chunked]
    End time:    2017/08/28 19:54:10 (Duration: 383ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using chunked]
    Start time:  2017/08/28 19:54:10
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: rollbackDuringIncrementalCommitWorks[Using chunked]
    End time:    2017/08/28 19:54:10 (Duration: 364ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using chunked]
    Start time:  2017/08/28 19:54:10
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  IncrementalCommitTest
    Test method: incrementalCommitTransactionCanReadItsOwnModificationsInIndexer[Using chunked]
    End time:    2017/08/28 19:54:11 (Duration: 338ms)
================================================================================



19:54:11.079 [Test worker] INFO  o.c.common.test.ChronosUnitTest - Attempting to delete temp directory provided at: C:\Users\Martin\AppData\Local\Temp\ChronoDBTest5529815287975316420
19:54:11.079 [Test worker] INFO  o.c.common.test.ChronosUnitTest - Successfully deleted temp directory
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
