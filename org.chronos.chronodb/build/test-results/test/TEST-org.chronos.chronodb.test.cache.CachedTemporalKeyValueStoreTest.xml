<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" tests="25" skipped="0" failures="0" errors="0" timestamp="2017-08-28T17:50:27" hostname="Aurora" time="3.97">
  <properties/>
  <testcase name="writeThroughWorksCorrectly[Using chunked]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.22"/>
  <testcase name="cacheIsFilledByTKVS[Using chunked]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.2"/>
  <testcase name="canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using chunked]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.232"/>
  <testcase name="writeThroughWorksCorrectlyInIncrementalCommit[Using chunked]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.184"/>
  <testcase name="cacheProducesHitsOnGetOperations[Using chunked]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.2"/>
  <testcase name="writeThroughWorksCorrectly[Using inmemory]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.016"/>
  <testcase name="cacheIsFilledByTKVS[Using inmemory]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.0"/>
  <testcase name="canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using inmemory]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.0"/>
  <testcase name="writeThroughWorksCorrectlyInIncrementalCommit[Using inmemory]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.0"/>
  <testcase name="cacheProducesHitsOnGetOperations[Using inmemory]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.0"/>
  <testcase name="writeThroughWorksCorrectly[Using tupl]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.1"/>
  <testcase name="cacheIsFilledByTKVS[Using tupl]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.084"/>
  <testcase name="canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using tupl]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.169"/>
  <testcase name="writeThroughWorksCorrectlyInIncrementalCommit[Using tupl]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.162"/>
  <testcase name="cacheProducesHitsOnGetOperations[Using tupl]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.185"/>
  <testcase name="writeThroughWorksCorrectly[Using jdbc]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.053"/>
  <testcase name="cacheIsFilledByTKVS[Using jdbc]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.047"/>
  <testcase name="canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using jdbc]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.05"/>
  <testcase name="writeThroughWorksCorrectlyInIncrementalCommit[Using jdbc]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.035"/>
  <testcase name="cacheProducesHitsOnGetOperations[Using jdbc]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.062"/>
  <testcase name="writeThroughWorksCorrectly[Using mapdb]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.422"/>
  <testcase name="cacheIsFilledByTKVS[Using mapdb]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.4"/>
  <testcase name="canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using mapdb]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.486"/>
  <testcase name="writeThroughWorksCorrectlyInIncrementalCommit[Using mapdb]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.4"/>
  <testcase name="cacheProducesHitsOnGetOperations[Using mapdb]" classname="org.chronos.chronodb.test.cache.CachedTemporalKeyValueStoreTest" time="0.263"/>
  <system-out><![CDATA[19:50:27.567 [Test worker] INFO  o.c.common.test.ChronosUnitTest - Temp directory is provided at: C:\Users\Martin\AppData\Local\Temp\ChronoDBTest5529815287975316420


================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using chunked]
    Start time:  2017/08/28 19:50:27
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using chunked]
    End time:    2017/08/28 19:50:27 (Duration: 220ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using chunked]
    Start time:  2017/08/28 19:50:27
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using chunked]
    End time:    2017/08/28 19:50:27 (Duration: 200ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using chunked]
    Start time:  2017/08/28 19:50:27
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using chunked]
    End time:    2017/08/28 19:50:28 (Duration: 232ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using chunked]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using chunked]
    End time:    2017/08/28 19:50:28 (Duration: 184ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using chunked]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using chunked]
    End time:    2017/08/28 19:50:28 (Duration: 200ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using inmemory]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using inmemory]
    End time:    2017/08/28 19:50:28 (Duration: 16ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using inmemory]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using inmemory]
    End time:    2017/08/28 19:50:28 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using inmemory]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using inmemory]
    End time:    2017/08/28 19:50:28 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using inmemory]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using inmemory]
    End time:    2017/08/28 19:50:28 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using inmemory]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using inmemory]
    End time:    2017/08/28 19:50:28 (Duration: 0ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using tupl]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using tupl]
    End time:    2017/08/28 19:50:28 (Duration: 100ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using tupl]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using tupl]
    End time:    2017/08/28 19:50:28 (Duration: 84ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using tupl]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using tupl]
    End time:    2017/08/28 19:50:28 (Duration: 169ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using tupl]
    Start time:  2017/08/28 19:50:28
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using tupl]
    End time:    2017/08/28 19:50:29 (Duration: 162ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using tupl]
    Start time:  2017/08/28 19:50:29
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using tupl]
    End time:    2017/08/28 19:50:29 (Duration: 185ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using jdbc]
    Start time:  2017/08/28 19:50:29
================================================================================



19:50:29.319 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6a09aeef,name=1hgeqrl9qbn6pz6yfah30|6a09aeef registered.
19:50:29.334 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6a09aeef,name=1hgeqrl9qbn6pz6yfah30|6a09aeef unregistered, in order to be reregistered after update.
19:50:29.334 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6a09aeef,name=1hgeqrl9qbn6pz6yfah30|6a09aeef registered.
19:50:29.334 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@655591ab [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@1bf9a0bb [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|78e9122e, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@b4fd8aeb [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6d9d6820, jdbcUrl -> jdbc:h2:mem:4ea91061cc5c4c2f80fc14e593a3bc60, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|6a09aeef, numHelperThreads -> 3 ]
19:50:29.334 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@78dc0cff config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:50:29.334 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:50:29.334 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:50:29.334 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:50:29.372 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6a09aeef,name=1hgeqrl9qbn6pz6yfah30|6a09aeef unregistered.
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4faab9b1
19:50:29.372 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4faab9b1
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4faab9b1
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4faab9b1
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5dcb15cf
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5dcb15cf
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5dcb15cf
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5dcb15cf
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3daede7
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3daede7
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3daede7
19:50:29.372 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3daede7


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using jdbc]
    End time:    2017/08/28 19:50:29 (Duration: 53ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using jdbc]
    Start time:  2017/08/28 19:50:29
================================================================================



19:50:29.372 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|1671f892,name=1hgeqrl9qbn6pz6yfah30|1671f892 registered.
19:50:29.388 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|1671f892,name=1hgeqrl9qbn6pz6yfah30|1671f892 unregistered, in order to be reregistered after update.
19:50:29.388 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|1671f892,name=1hgeqrl9qbn6pz6yfah30|1671f892 registered.
19:50:29.388 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@43e49e3a [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@45aed13e [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|615d6277, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@7f85542b [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|521bb261, jdbcUrl -> jdbc:h2:mem:8869451691754358aafb39cb820e1d5a, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|1671f892, numHelperThreads -> 3 ]
19:50:29.388 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@25eafb1 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:50:29.388 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:50:29.388 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:50:29.388 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4fd6bdc4
19:50:29.419 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|1671f892,name=1hgeqrl9qbn6pz6yfah30|1671f892 unregistered.
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4fd6bdc4
19:50:29.419 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@4fd6bdc4
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@4fd6bdc4
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@1364ee52
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@1364ee52
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@1364ee52
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@1364ee52
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6985f72a
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6985f72a
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@6985f72a
19:50:29.419 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@6985f72a


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using jdbc]
    End time:    2017/08/28 19:50:29 (Duration: 47ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using jdbc]
    Start time:  2017/08/28 19:50:29
================================================================================



19:50:29.419 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6e7796ae,name=1hgeqrl9qbn6pz6yfah30|6e7796ae registered.
19:50:29.435 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6e7796ae,name=1hgeqrl9qbn6pz6yfah30|6e7796ae unregistered, in order to be reregistered after update.
19:50:29.435 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6e7796ae,name=1hgeqrl9qbn6pz6yfah30|6e7796ae registered.
19:50:29.435 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@85f9c714 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@ed2beff9 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|74ecc487, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@3b1999d1 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|3fce97dd, jdbcUrl -> jdbc:h2:mem:ef8ab42144ed4dfdb32ece0f25ad624f, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|6e7796ae, numHelperThreads -> 3 ]
19:50:29.435 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@2a229502 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:50:29.435 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:50:29.435 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:50:29.435 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:50:29.468 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|6e7796ae,name=1hgeqrl9qbn6pz6yfah30|6e7796ae unregistered.
19:50:29.468 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@653348d3
19:50:29.468 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:50:29.468 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@653348d3
19:50:29.468 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@653348d3
19:50:29.468 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@653348d3
19:50:29.468 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3f3bdbb9
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3f3bdbb9
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3f3bdbb9
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3f3bdbb9
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@75cc56b6
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@75cc56b6
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@75cc56b6
19:50:29.469 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@75cc56b6


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using jdbc]
    End time:    2017/08/28 19:50:29 (Duration: 50ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using jdbc]
    Start time:  2017/08/28 19:50:29
================================================================================



19:50:29.473 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|2abf37af,name=1hgeqrl9qbn6pz6yfah30|2abf37af registered.
19:50:29.473 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|2abf37af,name=1hgeqrl9qbn6pz6yfah30|2abf37af unregistered, in order to be reregistered after update.
19:50:29.473 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|2abf37af,name=1hgeqrl9qbn6pz6yfah30|2abf37af registered.
19:50:29.473 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@ad236aa8 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@b91c0083 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|38ed9cf9, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@97a341a1 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|2c29cc8c, jdbcUrl -> jdbc:h2:mem:4982ddf622b646cbb343f042615363d0, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|2abf37af, numHelperThreads -> 3 ]
19:50:29.473 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@3d602b8 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:50:29.473 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:50:29.473 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:50:29.473 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3dd883b0
19:50:29.504 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|2abf37af,name=1hgeqrl9qbn6pz6yfah30|2abf37af unregistered.
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3dd883b0
19:50:29.504 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@3dd883b0
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@3dd883b0
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@17e04d7a
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@17e04d7a
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@17e04d7a
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@17e04d7a
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5603bff6
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5603bff6
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5603bff6
19:50:29.504 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5603bff6


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using jdbc]
    End time:    2017/08/28 19:50:29 (Duration: 35ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using jdbc]
    Start time:  2017/08/28 19:50:29
================================================================================



19:50:29.519 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5a127c81,name=1hgeqrl9qbn6pz6yfah30|5a127c81 registered.
19:50:29.519 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5a127c81,name=1hgeqrl9qbn6pz6yfah30|5a127c81 unregistered, in order to be reregistered after update.
19:50:29.519 [Test worker] DEBUG c.m.v.c.m.DynamicPooledDataSourceManagerMBean - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5a127c81,name=1hgeqrl9qbn6pz6yfah30|5a127c81 registered.
19:50:29.535 [Test worker] INFO  c.m.v.c.i.AbstractPoolBackedDataSource - Initializing c3p0 pool... com.mchange.v2.c3p0.PoolBackedDataSource@cbf7af32 [ connectionPoolDataSource -> com.mchange.v2.c3p0.WrapperConnectionPoolDataSource@394e3551 [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, debugUnreturnedConnectionStackTraces -> false, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|6ed5441d, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, nestedDataSource -> com.mchange.v2.c3p0.DriverManagerDataSource@bc407b87 [ description -> null, driverClass -> null, factoryClassLocation -> null, forceUseNamedDriverClass -> false, identityToken -> 1hgeqrl9qbn6pz6yfah30|cac92b7, jdbcUrl -> jdbc:h2:mem:8ddb099d60dc4c9b82ae3a055d9ed1e5, properties -> {} ], preferredTestQuery -> null, privilegeSpawnedThreads -> false, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, usesTraditionalReflectiveProxies -> false; userOverrides: {} ], dataSourceName -> null, extensions -> {}, factoryClassLocation -> null, identityToken -> 1hgeqrl9qbn6pz6yfah30|5a127c81, numHelperThreads -> 3 ]
19:50:29.535 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - com.mchange.v2.resourcepool.BasicResourcePool@51a0cbf7 config: [start -> 3; min -> 3; max -> 15; inc -> 3; num_acq_attempts -> 30; acq_attempt_delay -> 1000; check_idle_resources_delay -> 0; max_resource_age -> 0; max_idle_time -> 0; excess_max_idle_time -> 0; destroy_unreturned_resc_time -> 0; expiration_enforcement_delay -> 0; break_on_acquisition_failure -> false; debug_store_checkout_exceptions -> false; force_synchronous_checkins -> false]
19:50:29.535 [Test worker] DEBUG c.m.v.c.i.C3P0PooledConnectionPoolManager - Created new pool for auth, username (masked): 'null'.
19:50:29.535 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - acquire test -- pool size: 0; target_pool_size: 3; desired target? 1
19:50:29.535 [Test worker] DEBUG c.m.v.resourcepool.BasicResourcePool - awaitAvailable(): [unknown]
19:50:29.551 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - MBean: com.mchange.v2.c3p0:type=PooledDataSource,identityToken=1hgeqrl9qbn6pz6yfah30|5a127c81,name=1hgeqrl9qbn6pz6yfah30|5a127c81 unregistered.
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@7a827653
19:50:29.551 [Test worker] DEBUG c.m.v.c.m.ActiveManagementCoordinator - C3P0Registry mbean unregistered.
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@7a827653
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@7a827653
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@7a827653
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@728ced48
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@728ced48
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@728ced48
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@728ced48
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Preparing to destroy resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5ca8c61d
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Preparing to destroy PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5ca8c61d
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.c.i.C3P0PooledConnectionPool - Successfully destroyed PooledConnection: com.mchange.v2.c3p0.impl.NewPooledConnection@5ca8c61d
19:50:29.551 [Resource Destroyer in BasicResourcePool.close()] DEBUG c.m.v.resourcepool.BasicResourcePool - Successfully destroyed resource: com.mchange.v2.c3p0.impl.NewPooledConnection@5ca8c61d


================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using jdbc]
    End time:    2017/08/28 19:50:29 (Duration: 47ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using mapdb]
    Start time:  2017/08/28 19:50:29
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectly[Using mapdb]
    End time:    2017/08/28 19:50:29 (Duration: 422ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using mapdb]
    Start time:  2017/08/28 19:50:29
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheIsFilledByTKVS[Using mapdb]
    End time:    2017/08/28 19:50:30 (Duration: 400ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using mapdb]
    Start time:  2017/08/28 19:50:30
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: canWriteThroughCacheSeveralTimesOnSameKeyInIncrementalCommit[Using mapdb]
    End time:    2017/08/28 19:50:30 (Duration: 486ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using mapdb]
    Start time:  2017/08/28 19:50:30
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: writeThroughWorksCorrectlyInIncrementalCommit[Using mapdb]
    End time:    2017/08/28 19:50:31 (Duration: 400ms)
================================================================================





================================================================================
 TEST START                                                                     
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using mapdb]
    Start time:  2017/08/28 19:50:31
================================================================================





================================================================================
 TEST SUCCEEDED                                                                 
--------------------------------------------------------------------------------
    Test class:  CachedTemporalKeyValueStoreTest
    Test method: cacheProducesHitsOnGetOperations[Using mapdb]
    End time:    2017/08/28 19:50:31 (Duration: 263ms)
================================================================================



19:50:31.537 [Test worker] INFO  o.c.common.test.ChronosUnitTest - Attempting to delete temp directory provided at: C:\Users\Martin\AppData\Local\Temp\ChronoDBTest5529815287975316420
19:50:31.537 [Test worker] INFO  o.c.common.test.ChronosUnitTest - Successfully deleted temp directory
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
